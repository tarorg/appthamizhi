---
import Groq from "groq-sdk";

export const prerender = false;

const groq = new Groq({ apiKey: import.meta.env.GROQ_API_KEY });

async function getGroqChatCompletion(messages) {
  return groq.chat.completions.create({
    messages: messages,
    model: "llama3-8b-8192",
  });
}

if (Astro.request.method === 'POST') {
  try {
    const body = await Astro.request.json();
    const { messages } = body;

    if (!messages || !Array.isArray(messages)) {
      return new Response(JSON.stringify({ error: 'Invalid messages format' }), {
        status: 400,
        headers: { 'Content-Type': 'application/json' }
      });
    }

    const chatCompletion = await getGroqChatCompletion(messages);
    const reply = chatCompletion.choices[0]?.message?.content || "";

    return new Response(JSON.stringify({ reply }), {
      status: 200,
      headers: { 'Content-Type': 'application/json' }
    });
  } catch (error) {
    console.error('Error in groq-chat:', error);
    return new Response(JSON.stringify({ error: 'Internal server error' }), {
      status: 500,
      headers: { 'Content-Type': 'application/json' }
    });
  }
}
---