---
import Layout from '../layouts/Layout.astro';
---

<Layout title="Create Post">
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
    <div class="mb-8">
      <input type="text" name="title" id="title" placeholder="Post Title" required class="w-full text-4xl font-bold border-b-2 border-gray-200 focus:border-indigo-500 focus:outline-none pb-2">
    </div>

    <div class="flex space-x-8 mb-8">
      <div class="w-1/3">
        <h2 class="text-xl font-semibold mb-4">Additional Media</h2>
        <div class="space-y-4">
          <div>
            <label for="feature-image" class="block text-sm font-medium text-gray-700">Feature Image</label>
            <input type="file" name="feature-image" id="feature-image" accept="image/*" class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500">
          </div>
          <div>
            <label for="media" class="block text-sm font-medium text-gray-700">Other Media</label>
            <input type="file" name="media" accept="image/*,audio/*,video/*,.pdf" multiple class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500">
          </div>
        </div>
      </div>
      <div class="w-2/3">
        <button id="togglePanel" class="mb-4 bg-indigo-600 text-white px-4 py-2 rounded-md hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
          Toggle Metadata Panel
        </button>
      </div>
    </div>

    <div id="editorjs" class="w-full border border-gray-300 rounded-md min-h-[500px] p-4"></div>

    <div id="sidePanel" class="fixed top-0 right-0 w-96 h-full bg-white shadow-lg transform translate-x-full transition-transform duration-300 ease-in-out overflow-y-auto">
      <form class="p-6 space-y-6">
        <input type="text" name="tags" id="tags" placeholder="Add tags..." class="w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-indigo-500 focus:border-indigo-500">
        
        <input type="text" name="collection" id="collection" placeholder="Collection" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-indigo-500 focus:border-indigo-500">

        <textarea name="excerpt" id="excerpt" rows="3" placeholder="Excerpt" class="w-full rounded-md border-gray-300 shadow-sm focus:ring-indigo-500 focus:border-indigo-500"></textarea>

        <textarea name="metadata" id="metadata" rows="3" placeholder="SEO Description" class="w-full rounded-md border-gray-300 shadow-sm focus:ring-indigo-500 focus:border-indigo-500"></textarea>

        <input type="datetime-local" name="datetime" id="datetime" required class="w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-indigo-500 focus:border-indigo-500">

        <input type="text" name="authors" id="authors" placeholder="Authors (comma-separated)" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-indigo-500 focus:border-indigo-500">

        <input type="text" name="location" id="location" placeholder="Location" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-indigo-500 focus:border-indigo-500">

        <button type="submit" class="w-full px-4 py-2 bg-indigo-600 text-white rounded-md hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
          Publish
        </button>
      </form>
    </div>
  </div>
</Layout>

<script>
  import EditorJS from '@editorjs/editorjs';
  import Header from '@editorjs/header';
  import List from '@editorjs/list';
  import Checklist from '@editorjs/checklist';
  import Quote from '@editorjs/quote';
  import Warning from '@editorjs/warning';
  import Marker from '@editorjs/marker';
  import CodeTool from '@editorjs/code';
  import Delimiter from '@editorjs/delimiter';
  import InlineCode from '@editorjs/inline-code';
  import LinkTool from '@editorjs/link';
  import ImageTool from '@editorjs/image';
  import Embed from '@editorjs/embed';
  import Table from '@editorjs/table';

  const editor = new EditorJS({
    holder: 'editorjs',
    placeholder: 'Start writing your post...',
    tools: {
      header: {
        class: Header,
        inlineToolbar: ['marker', 'link'],
        config: {
          placeholder: 'Enter a header',
          levels: [2, 3, 4],
          defaultLevel: 3
        }
      },
      list: {
        class: List,
        inlineToolbar: true,
        config: {
          defaultStyle: 'unordered'
        }
      },
      checklist: {
        class: Checklist,
        inlineToolbar: true,
      },
      quote: {
        class: Quote,
        inlineToolbar: true,
        config: {
          quotePlaceholder: 'Enter a quote',
          captionPlaceholder: 'Quote\'s author',
        },
      },
      warning: Warning,
      marker: {
        class: Marker,
        shortcut: 'CMD+SHIFT+M',
      },
      code: {
        class: CodeTool,
        shortcut: 'CMD+SHIFT+C'
      },
      delimiter: Delimiter,
      inlineCode: {
        class: InlineCode,
        shortcut: 'CMD+SHIFT+C'
      },
      linkTool: LinkTool,
      image: {
        class: ImageTool,
        config: {
          endpoints: {
            byFile: 'http://localhost:8080/uploadFile', // Replace with your image upload endpoint
            byUrl: 'http://localhost:8080/fetchUrl', // Replace with your image fetch endpoint
          }
        }
      },
      embed: {
        class: Embed,
        config: {
          services: {
            youtube: true,
            coub: true,
          }
        }
      },
      table: {
        class: Table,
        inlineToolbar: true,
        config: {
          rows: 2,
          cols: 3,
        },
      },
    },
  });

  const togglePanel = document.getElementById('togglePanel');
  const sidePanel = document.getElementById('sidePanel');

  togglePanel?.addEventListener('click', () => {
    sidePanel?.classList.toggle('translate-x-full');
  });

  // Handle form submission
  const form = document.querySelector('form');
  form?.addEventListener('submit', async (e) => {
    e.preventDefault();
    const editorData = await editor.save();
    
    // Here you would typically send the form data and editor content to your server
    console.log('Form data:', new FormData(form));
    console.log('Editor data:', editorData);
    
    // Implement your post submission logic here
  });
</script>

<style>
  /* Add any additional styles here */
  .prose {
    max-width: none;
  }
</style>